<Application x:Class="QuanLyGiaoXu.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:QuanLyGiaoXu"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary 
            xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
            <!-- App Colors -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#34495e" />
            <SolidColorBrush x:Key="AccentColor" Color="#2d6dd5" />
            <SolidColorBrush x:Key="DarkText" Color="#0e263e" />
            <SolidColorBrush x:Key="LightText" Color="#a6b4ba" />
            <SolidColorBrush x:Key="SelectedButton" Color="#233342" />
            <SolidColorBrush x:Key="GreyBG" Color="#ecf0f1" />

            <!-- Component Styles -->
            <Style x:Key="NavButton" BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListViewItem}">
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="0 5" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Arial" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="FontWeight" Value="Thin"/>
                        <Setter Property="Foreground" Value="{StaticResource LightText}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource SelectedButton}" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderThickness" Value="0" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SettingsButton" BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource LightText}" />
                <Setter Property="Margin" Value="0 20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Background" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InfoTitle" TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="{StaticResource LightText}" />
            </Style>

            <Style x:Key="InfoValue" BasedOn="{StaticResource InfoTitle}" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource DarkText}" />
            </Style>
            <!--error msg-->
            <Style x:Key="ErrorMsg" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Red"></Setter>
                <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
                <Setter Property="TextAlignment" Value="Center"></Setter>
                <Setter Property="Margin" Value="0 15 0 -15"></Setter>
                <Setter Property="Width" Value="200"></Setter>
                <Setter Property="FontSize" Value="9"></Setter>
            </Style>
            <!-- Details View Info Title -->
            <Style x:Key="DetailsInfoTitle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource LightText}" />
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Margin" Value="15 15 0 0"/>
            </Style>

            <!-- Details View Info Value -->
            <Style x:Key="DetailsInfoValue" BasedOn="{StaticResource DetailsInfoTitle}" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Margin" Value="15 5 0 0"/>
            </Style>
            <!--Details View DialogHost Border-->
            <Style x:Key="DetailsDialogHostBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="MinWidth" Value="256"/>
                <Setter Property="MinHeight" Value="256"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="ClipToBounds" Value="True"/>
            </Style>
            <!--Details View Button-->
            <Style x:Key="DetailsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
                <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
                <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="white"/>
            </Style>
            <!-- Material ListBox-->
            <!-- New ScrollBar and ScrollViewer-->
            <Style x:Key="{x:Type ScrollViewer}" 
           TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter 
                                    x:Name="PART_ScrollContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            </Grid>
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>                                
                                <ScrollBar 
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Column="1"
                                    Minimum="0.0"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                    Cursor="Arrow"
                                    AutomationProperties.AutomationId="VerticalScrollBar"/>
                                <ScrollBar 
                                    x:Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal"
                                    Grid.Row="1"
                                    Minimum="0.0"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Cursor="Arrow"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"/>                                
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" 
                     Value="false">
                    <Setter Property="Foreground" 
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver"
                     Value="true">
                    <Setter Property="HorizontalScrollBarVisibility"
                        Value="Visible"/>
                    <Setter Property="VerticalScrollBarVisibility"
                        Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="UpArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 3,0 l 3,8 l -6,0 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="DownArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 6,0 l -3,8 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="LeftArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,3 l 8,-3 l 0,6 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="RightArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 8,3 l -8,3 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#FF777777" CornerRadius="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
            <!-- Meterial Design Theme -->

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.GroupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />
               
            </ResourceDictionary.MergedDictionaries>
            
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
